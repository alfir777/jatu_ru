version: '3'

networks:
  web:
    external: true
  internal:
    external: false

services:
  traefik:
    image: traefik:v2.5
    container_name: traefik
    ports:
      - 80:80
      - 443:443
    volumes:
      - "$PWD/traefik.toml:/traefik.toml"
      - "$PWD/traefik_dynamic.toml:/traefik_dynamic.toml"
      - "$PWD/acme.json:/acme.json"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - web
      - internal
  web:
    build: .
    container_name: web
    env_file:
      - .env
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; gunicorn --bind 0.0.0.0:8000 config.wsgi'
    volumes:
      - .:/home/app/web
    restart: always
    ports:
      - '8010:8000'
    expose:
      - 8010
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.django.rule=Host(`${DOMAIN_NAME}`)"
      - "traefik.http.routers.django.tls=true"
      - "traefik.http.routers.django.tls.certresolver=lets-encrypt"
    networks:
      - web
      - internal
  db:
    image: postgres:13-alpine
    container_name: db
    env_file:
      - .env
    volumes:
      - ./data/db:/var/lib/postgresql/data
    restart: always
    ports:
      - "5432:5432"
    expose:
      - 5432
    environment:
      - "POSTGRES_DB=${DATABASES_NAME}"
      - "POSTGRES_USER=${DATABASES_USER}"
      - "POSTGRES_PASSWORD=${DATABASES_PASSWORD}"
    networks:
      - internal

  nginx:
    image: nginx:1.15-alpine
    container_name: nginx
    env_file:
      - .env
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./config/static:/static
      - ./config/media:/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.static-http.entrypoints=websecure"
      - "traefik.http.routers.static-http.rule=Host(`${DOMAIN_NAME}`) && PathPrefix(`/static`,`/media`)" 
      - "traefik.http.routers.static-http.tls.certresolver=lets-encrypt"
    networks:
      - web
      - internal
    depends_on:
      - web
